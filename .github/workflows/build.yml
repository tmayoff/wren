name: checks

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    env:
      SCCACHE_GHA_ENABLED: "true"
      CXX: "sccache clang++"

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - uses: DeterminateSystems/nix-installer-action@v16

    - uses: cachix/cachix-action@v15
      with:
        name: tmayoff
        authToken: '${{ secrets.CACHIX_AUTH }}'

    - name: Setup sccache
      uses: mozilla-actions/sccache-action@v0.0.7

    - uses: misyltoad/gcc-problem-matcher@v3

    - name: configure
      run: nix develop --command just configure
    - name: build
      run: nix develop --command ninja -C build
    - name: test
      run: nix develop --command meson test -C build --print-errorlogs

  lint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - uses: DeterminateSystems/nix-installer-action@v16

    - uses: cachix/cachix-action@v15
      with:
        name: tmayoff
        authToken: '${{ secrets.CACHIX_AUTH }}'

    - uses: misyltoad/gcc-problem-matcher@v3

    - name: configure
      run: nix develop --command just configure
    - name: format check
      run: nix develop --command ninja -C build clang-format-check

  coverage:
    env: 
      SCCACHE_GHA_ENABLED: "true"
      CXX: "sccache clang++"

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - uses: DeterminateSystems/nix-installer-action@v16

    - uses: cachix/cachix-action@v15
      with:
        name: tmayoff
        authToken: '${{ secrets.CACHIX_AUTH }}'

    - uses: mozilla-actions/sccache-action@v0.0.7

    - name: build & test
      run: |
        nix develop --command meson setup build -Db_coverage=true
        nix develop --command just test
    - name: coverage
      run:  nix develop --command just coverage
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v5
      with:
        files: build/coverage.info
        token: ${{ secrets.CODECOV_TOKEN }}
    - name: Upload tests
      uses: codecov/test-results-action@v1
      with:
        files: build/meson-logs/testlog.junit.xml
        token: ${{ secrets.CODECOV_TOKEN }}
